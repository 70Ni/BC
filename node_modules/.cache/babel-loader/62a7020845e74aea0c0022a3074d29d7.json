{"ast":null,"code":"var _jsxFileName = \"/home/tony/Desktop/bc/src/Components/ItemPage/ImageUploader/ImageUploader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ImageUploading from \"react-images-uploading\";\nimport './ImageUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUploader() {\n  _s();\n\n  const [images, setimages] = useState([]);\n  const maxNumber = 6;\n\n  const onChange = (imageList, addUpdateIndex) => {\n    console.log(imageList, addUpdateIndex);\n    setimages(imageList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadwrapper\",\n    children: /*#__PURE__*/_jsxDEV(ImageUploading, {\n      multiple: true,\n      value: images,\n      onChange: onChange,\n      maxNumber: maxNumber,\n      maxFileSize: (50, 46, 964),\n      acceptType: ['png', 'jpg', 'jpeg'],\n      dataURLKey: \"data_url\",\n      children: ({\n        imageList,\n        onImageUpload,\n        onImageRemove,\n        onImageUpdate,\n        isDragging,\n        dragProps,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image_upload__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: isDragging ? {\n            color: \"red\"\n          } : null,\n          onClick: onImageUpload,\n          ...dragProps,\n          children: \"click or Drop here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), imageList.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ImageList__items\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.data_url,\n            alt: \"\",\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-item__btn-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onImageUpdate(index),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onImageRemove(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)), errors && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [errors.maxNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Number of selected images exceed maxNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 50\n          }, this), errors.acceptType && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your selected file type is not allow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 51\n          }, this), errors.maxFileSize && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selected file size exceed maxFileSize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 52\n          }, this), errors.resolution && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selected file is not match your desired resolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageUploader, \"a+nL1ZaiF8usoc+IcSOFejtNaZ0=\");\n\n_c = ImageUploader;\nexport default ImageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"sources":["/home/tony/Desktop/bc/src/Components/ItemPage/ImageUploader/ImageUploader.js"],"names":["React","useState","ImageUploading","ImageUploader","images","setimages","maxNumber","onChange","imageList","addUpdateIndex","console","log","onImageUpload","onImageRemove","onImageUpdate","isDragging","dragProps","errors","color","map","image","index","data_url","acceptType","maxFileSize","resolution"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAO,qBAAP;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMK,SAAS,GAAG,CAAlB;;AACA,QAAMC,QAAQ,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBC,cAAvB;AACAJ,IAAAA,SAAS,CAACG,SAAD,CAAT;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI,QAAC,cAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,KAAK,EAAEJ,MAFX;AAGI,MAAA,QAAQ,EAAEG,QAHd;AAII,MAAA,SAAS,EAAED,SAJf;AAKI,MAAA,WAAW,GAAI,IAAG,EAAH,EAAM,GAAV,CALf;AAMI,MAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CANhB;AAOI,MAAA,UAAU,EAAC,UAPf;AAAA,gBASK,CAAC;AACEE,QAAAA,SADF;AAEEI,QAAAA,aAFF;AAGEC,QAAAA,aAHF;AAIEC,QAAAA,aAJF;AAKEC,QAAAA,UALF;AAMEC,QAAAA,SANF;AAOEC,QAAAA;AAPF,OAAD,kBAWG;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AACI,UAAA,KAAK,EAAEF,UAAU,GAAG;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAAH,GAAsB,IAD3C;AAEI,UAAA,OAAO,EAAEN,aAFb;AAAA,aAGQI,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAQKR,SAAS,CAACW,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAiB,UAAA,SAAS,EAAC,kBAA3B;AAAA,kCACI;AAAK,YAAA,GAAG,EAAED,KAAK,CAACE,QAAhB;AAA0B,YAAA,GAAG,EAAC,EAA9B;AAAiC,YAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACI;AAAQ,cAAA,OAAO,EAAE,MAAMR,aAAa,CAACO,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,OAAO,EAAE,MAAMR,aAAa,CAACQ,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,gBADH,CARL,EAiBKJ,MAAM,iBAAI;AAAA,qBACNA,MAAM,CAACX,SAAP,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAENW,MAAM,CAACM,UAAP,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFf,EAGNN,MAAM,CAACO,WAAP,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHhB,EAINP,MAAM,CAACQ,UAAP,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBf;AAAA;AAAA;AAAA;AAAA;AAAA;AApBR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqDH;;GA5DQtB,a;;KAAAA,a;AA8DT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport ImageUploading from \"react-images-uploading\";\nimport './ImageUploader.css'\nfunction ImageUploader() {\n    const [images, setimages] = useState([]);\n    const maxNumber = 6;\n    const onChange = (imageList, addUpdateIndex) => {\n        console.log(imageList, addUpdateIndex);\n        setimages(imageList)\n    }\n    return (\n        <div className=\"uploadwrapper\">\n            <ImageUploading\n                multiple\n                value={images}\n                onChange={onChange}\n                maxNumber={maxNumber}\n                maxFileSize = {50,46,964}\n                acceptType={['png', 'jpg', 'jpeg']}\n                dataURLKey=\"data_url\"\n            >\n                {({\n                    imageList,\n                    onImageUpload,\n                    onImageRemove,\n                    onImageUpdate,\n                    isDragging,\n                    dragProps,\n                    errors\n                }) =>\n\n                (\n                    <div className=\"image_upload__wrapper\">\n                        <button\n                            style={isDragging ? { color: \"red\" } : null}\n                            onClick={onImageUpload}\n                            {...dragProps}\n                        >\n                            click or Drop here\n                        </button>\n                        {imageList.map((image, index) => (\n                            <div key={index} className=\"ImageList__items\">\n                                <img src={image.data_url} alt=\"\" width=\"100\" />\n                                <div className=\"image-item__btn-wrapper\">\n                                    <button onClick={() => onImageUpdate(index)}>Update</button>\n                                    <button onClick={() => onImageRemove(index)}>Remove</button>\n                                </div>\n                            </div>\n                        ))}\n                        {errors && <div>\n                            {errors.maxNumber && <span>Number of selected images exceed maxNumber</span>}\n                            {errors.acceptType && <span>Your selected file type is not allow</span>}\n                            {errors.maxFileSize && <span>Selected file size exceed maxFileSize</span>}\n                            {errors.resolution && <span>Selected file is not match your desired resolution</span>}\n                        </div>}\n\n                    </div>\n\n                )}\n\n            </ImageUploading>\n        </div>\n    )\n}\n\nexport default ImageUploader;\n"]},"metadata":{},"sourceType":"module"}